package practice;

public class Array {
	public static void main(String[] args) {
		Array array=new Array();
		array.init();
	
	}

	
  // 배열 생성 후 > init()메소드 만들기 > 7개의 값을 갖는 int 배열 생성
  // 오류 발생 Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 7 (배열의 index값을 7로 할당했으면 인덱스는 0~6까지. 그런데 7번방까지 만들었으니 Index범위 오류 발생
	public void init() {
		int []lottoNumbers=new int[7];
		
		lottoNumbers [0]=5;
		lottoNumbers [1]=12;
		lottoNumbers [2]=23;
		lottoNumbers [3]=25;
		lottoNumbers [4]=38;
		lottoNumbers [5]=41;
		lottoNumbers [6]=2;
		lottoNumbers [7]=9;
		
		
	}

}

// 수정 후 
package practice;

public class Array {
	public static void main(String[] args) {
		Array array=new Array();
		array.init();
	
	}

	
	public void init() {
		int []lottoNumbers=new int[7];
		
		lottoNumbers [0]=5;
		lottoNumbers [1]=12;
		lottoNumbers [2]=23;
		lottoNumbers [3]=25;
		lottoNumbers [4]=38;
		lottoNumbers [5]=41;
		lottoNumbers [6]=2;
		//lottoNumbers [7]=9; // 배열의 index범위에서 벗어나는 부분은 삭제하거나 주석처리 할 것. 
		
		System.out.println(lottoNumbers[4]); // 해당 lottoNumbers의 int 배열에서 보고싶은 index값을 출력하고 싶다면 출력문을 통해 해당 인덱스 넘버값 적어줄 것. 
		
		
	}
  
  // 여러 타입의 Array 형태 출력해보기. 그리고  타입의 순서를 bsilFD(비실FD) 라고 외우면 좋다고 했다. 
	public void primitiveTypes() {
		System.out.println("---------");
		
		byte []byteArray = new byte[1]; // 인덱스값이 1이다. 그러므로 인덱스의 개수는 0번방(1개)밖에 없는 것이다. -=
		short []shortArray = new short[1];
		int []intArray = new int[1];
		long []longArray = new long[1];
		float []floatArray = new float[1]; 
		double []doubleArray = new double[1];
		char []charArray = new char[1]; 
		boolean []boolenArray = new boolean[1]; 
		
		System.out.println("byteArray[0]="+byteArray[0]);
		System.out.println("shortArray[0]="+shortArray[0]);
		System.out.println("intArray[0]="+intArray[0]);
		System.out.println("longArray[0]="+longArray[0]);
		System.out.println("floatArray[0]="+floatArray[0]);
		System.out.println("doubleArray[0]="+doubleArray[0]);
		System.out.println("charArray[0]="+charArray[0]); //char 배열의 기본 값은 '\u0000'이다. 그래서 출력 시 한 칸 공백으로 보인다. 
		System.out.println("booleanArray[0]="+boolenArray[0]); // boolean의 기본 값은 false이다. 
		
				}
	
	public void referenceTypes() {
		System.out.println("----------");
		String [] strings = new String[2];
		Array [] array = new Array[2];
		strings[0]="Please visit www.naver.com";
		array[0]=new Array();
		System.out.println("strings[0]="+strings[0]); //위에서 정의한 strings[0]에 할당했던 문자열이 출력된다. 
		System.out.println("strings[1]="+strings[1]); // strings[1] 인덱스에는 아무런 값도 입력하지 않았기 때문에 null값이 된다. 
		System.out.println("array[0]="+array[0]); // array 객체를 출력한 결과. 내가 설정한 패키지 이름과 타입의 이름, 골뱅이가 붙어서 나왔다. 참조 자료형은 public String toString()이라는 메소드를 만들어줘야만 암호 같은 내용이 출력되지 않는다. 
		System.out.println("array[0]="+array[1]); // array[1] 인덱스에는 아무런 값도 입력하지 않았기 때문에 null값이 뜬다. 인덱스1번방에 null값이 있는게 아니라, 값이 아예 없는 null 상태이다. 
		
		                               }

}



